select(
Company_ID,
lat,lon,
name = `Company Name`,
description = `Business Description`,
industry = `Primary Industry`,
sector = `Primary Sector`,
website = Website
)
geocoded %>%
inner_join(original,by=c('Company_ID'='Excel Company ID')) %>%
select(
Company_ID,
lat,lon,
name = `Company Name`,
description = `Business Description`,
industry = `Primary Industry`,
sector = `Primary Sector`,
website = Website
) %>%
write_csv('/var/www/html/missions/src/Ecosystem/data/CIQ2.csv',na='')
library('tidyverse')
folder = '/home/nate/APFC/IM-places/'
all_deals = read_csv(
paste0(folder,'IM-DB.csv'),
na=c('','#N/A','N/A','Not Specified')
)
known_places = read_csv(paste0(folder,'known-places.csv'))
destinations = all_deals %>%
select(
country = Destination_Economy,
state = Destination_State,
city = `Destination_City/geographic_area`
)
sources = all_deals %>%
select(
country = Source_Economy,
state = Source_State,
city = Source_City
)
sources %>%
# was calling base union() function, not tidyverse
# this should be equivalent
union_all(destinations) %>% distinct() %>%
anti_join( known_places ) %>%
arrange(country, state, city) %>%
write_csv(paste0(folder,'unknown-places.csv'),na='')
library('tidyverse')
folder = '/home/nate/APFC/IM-places/'
all_deals = read_csv(
paste0(folder,'IM-DB.csv'),
na=c('','#N/A','N/A','Not Specified')
)
known_places = read_csv(paste0(folder,'known-places.csv'))
destinations = all_deals %>%
select(
country = Destination_Economy,
state = Destination_State,
city = `Destination_City/geographic_area`
)
sources = all_deals %>%
select(
country = Source_Economy,
state = Source_State,
city = Source_City
)
sources %>%
# was calling base union() function, not tidyverse
# this should be equivalent
union_all(destinations) %>% distinct() %>%
anti_join( known_places ) %>%
arrange(country, state, city) %>%
write_csv(paste0(folder,'unknown-places.csv'),na='')
known_places
all_deals %>%
select(
country = Destination_Economy,
state = Destination_State,
city = `Destination_City/geographic_area`
)
# list all distinct pairs of identified places
all_deals %>%
select(
country = Destination_Economy,
state = Destination_State,
city = `Destination_City/geographic_area`
)%>%
inner_join(known_places)
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
))
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
select( target = geo_id )
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
rename( dest_geo_id = geo_id )
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
rename( dest_geo_id = geo_id ) %>%
inner_join(known_places,by=c(
'country' = 'Source_Economy',
'state' = 'Source_State',
'city' = 'Source_City'
)) %>%
rename( source_geo_id = geo_id )
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
rename( dest_geo_id = geo_id )
# list all distinct pairs of identified places
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
rename( dest_geo_id = geo_id ) %>%
inner_join(known_places,by=c(
'Source_Economy' = 'country',
'Source_State' = 'state',
'Source_City' = 'city'
)) %>%
rename( source_geo_id = geo_id )
# list all distinct pairs of identified places
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
rename( dest_geo_id = geo_id ) %>%
inner_join(known_places,by=c(
'Source_Economy' = 'country',
'Source_State' = 'state',
'Source_City' = 'city'
)) %>%
rename( source_geo_id = geo_id ) %>%
select(
source_geo_id, dest_geo_id
)
# list all distinct pairs of identified places
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
rename( dest_geo_id = geo_id ) %>%
inner_join(known_places,by=c(
'Source_Economy' = 'country',
'Source_State' = 'state',
'Source_City' = 'city'
)) %>%
rename( source_geo_id = geo_id ) %>%
select(
source_geo_id, dest_geo_id
) %>%
distinct()
# list all distinct, directed pairs of identified places
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
rename( dest_geo_id = geo_id ) %>%
inner_join(known_places,by=c(
'Source_Economy' = 'country',
'Source_State' = 'state',
'Source_City' = 'city'
)) %>%
rename( source_geo_id = geo_id ) %>%
select( source_geo_id, dest_geo_id ) %>%
distinct() %>%
write_csv(paste0(folder,'known-pairs.csv'))
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
rename( dest_geo_id = geo_id ) %>%
inner_join(known_places,by=c(
'Source_Economy' = 'country',
'Source_State' = 'state',
'Source_City' = 'city'
)) %>%
rename( source_geo_id = geo_id ) %>%
select( source_geo_id, dest_geo_id ) %>%
distinct() %>%
arrange()
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
rename( dest_geo_id = geo_id ) %>%
inner_join(known_places,by=c(
'Source_Economy' = 'country',
'Source_State' = 'state',
'Source_City' = 'city'
)) %>%
rename( source_geo_id = geo_id ) %>%
select( source_geo_id, dest_geo_id ) %>%
distinct() %>%
arrange( source_geo_id, dest_geo_id )
# list all distinct, directed pairs of identified places
known_places %>%
inner_join(all_deals,by=c(
'country' = 'Destination_Economy',
'state' = 'Destination_State',
'city' = 'Destination_City/geographic_area'
)) %>%
rename( dest_geo_id = geo_id ) %>%
inner_join(known_places,by=c(
'Source_Economy' = 'country',
'Source_State' = 'state',
'Source_City' = 'city'
)) %>%
rename( source_geo_id = geo_id ) %>%
select( source_geo_id, dest_geo_id ) %>%
distinct() %>%
arrange( source_geo_id, dest_geo_id ) %>%
write_csv(paste0(folder,'known-pairs.csv'))
library('tidyverse')
registrants = read_csv('registrants.csv')
registrants
subscribers = read_csv('subscribers.csv')
subscribers
subscribers
subscribers %>%
summarize( n = n() )
read_csv('registrants.csv')
read_csv('registrants.csv') %>% mutate(email = lowerCase(email) )
read_csv('registrants.csv') %>% mutate(email = tolower(email) )
subscribers %>%
mutate(email = tolower(`Email Address`))
read_csv('subscribers.csv') %>%
mutate(email = tolower(`Email Address`)) %>%
anti_join( registrants )
read_csv('subscribers.csv') %>%
mutate(email = tolower(`Email Address`)) %>%
anti_join( registrants ) %>%
write_csv( 'subscribers_not_registered.csv' )
read_csv('subscribers.csv') %>%
mutate(email = tolower(`Email Address`)) %>%
anti_join( registrants ) %>%
write_csv( 'subscribers_not_registered.csv', na='' )
read_csv('subscribers.csv')
read_csv('subscribers.csv') %>%
mutate(email = tolower(`Email Address`)) %>%
anti_join( registrants )
636-618
View(subscribers)
library('tidyverse')
library('data.table') # like
setwd('/var/www/html/urban-freight/src/data/fuel-price/')
read_csv('18100001.csv')
library('lubridate')
read_csv('18100001.csv') %>%
mutate( Date = ym(Date) )
read_csv('18100001.csv') %>%
mutate( Date = ymd(Date) )
read_csv('18100001.csv') %>%
mutate( REF_DATE = ymd(REF_DATE) )
read_csv('18100001.csv') %>%
mutate( REF_DATE = parse_date_time(REF_DATE,'ym') )
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) )
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter( year(REF_DATE)==2021 )
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter( year(REF_DATE)==2020 )
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter( year(REF_DATE)==2020 ) %>%
group_by( GEO ) %>%
summarise( mean(VALUE) )
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter( year(REF_DATE)==2019 ) %>%
group_by( GEO ) %>%
summarise( mean(VALUE) )
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter( year(REF_DATE)==2018 ) %>%
group_by( GEO ) %>%
summarise( mean(VALUE) )
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter( year(REF_DATE)==2020 ) %>%
group_by( GEO ) %>%
summarise( mean(VALUE) )
read_csv('18100001.csv')
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter( year(REF_DATE)==2020 ) %>%
group_by( GEO, `Type of fuel` ) %>%
summarise( mean(VALUE) )
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter( year(REF_DATE)==2020 ) %>%
group_by( GEO, `Type of fuel` ) %>%
summarise( mean(VALUE) ) %>%
write_csv('yearly-average.csv')
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter( year(REF_DATE) > 2010 ) %>%
group_by( GEO, year(REF_DATE), `Type of fuel` ) %>%
summarise( mean(VALUE) ) %>%
write_csv('yearly-average.csv')
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter(
year(REF_DATE) > 2010 &
TRUE
) %>%
group_by( GEO, year(REF_DATE), `Type of fuel` ) %>%
summarise( mean(VALUE) ) %>%
write_csv('yearly-average.csv')
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter(
year(REF_DATE) > 2010 &
`Type of fuel` %like% 'self'
) %>%
group_by( GEO, year(REF_DATE), `Type of fuel` ) %>%
summarise( mean(VALUE) ) %>%
write_csv('yearly-average.csv')
read_csv('GEOTAB.csv')
read_csv('GEOTAB.csv') %>%
filter( City %LIKE% 'Toronto' )
read_csv('GEOTAB.csv') %>%
filter( City %like% 'Toronto' )
read_csv('GEOTAB.csv') %>%
filter( City %like% 'Toronto|Edmonton|Vancouver' )
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' )
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' ) %>%
select( City, MPG_HDT, MPG_MDT )
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' ) %>%
mutate(
lp100km_HDT = (MPG_HDT * 1.609344) / 4.54609
)
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' ) %>%
select( City, MPG_HDT, MPG_MDT ) %>%
mutate(
lp100km_HDT = 100 / ( (MPG_HDT * 1.609344) / 4.54609 )
)
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' ) %>%
select( City, MPG_HDT, MPG_MDT ) %>%
mutate(
lp100km_HDT = 100 / ( (MPG_HDT * 1.609344) / 4.54609 ),
lp100km_MDT = 100 / ( (MPG_MDT * 1.609344) / 4.54609 )
)
6.74  * 1.609
6.74  * 1.609 / 4.54
100 / 6.74  * 1.609 / 4.54
100 / (6.74  * 1.609 / 4.54)
6.74  * 1.609 / 4.54
(6.74  * 1.609) / 4.54
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' ) %>%
select( City, MPG_HDT, MPG_MDT ) %>%
mutate(
lp100km_HDT = 100 / ( (MPG_HDT * 1.609344) / 4.54609 ),
lp100km_MDT = 100 / ( (MPG_MDT * 1.609344) / 4.54609 )
)
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' ) %>%
select( City, MPG_HDT, MPG_MDT ) %>%
mutate(
lpkm_HDT =  (MPG_HDT * 1.609344) / 4.54609,
lpkm_MDT =  (MPG_MDT * 1.609344) / 4.54609
)
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' ) %>%
select( City, MPG_HDT, MPG_MDT ) %>%
mutate(
kmpl_HDT =  (MPG_HDT * 1.609344) / 4.54609,
kmpl_MDT =  (MPG_MDT * 1.609344) / 4.54609
)
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter(
year(REF_DATE) > 2010 &
`Type of fuel` %like% 'self' &
GEO %like% '^Toronto|^Edmonton|^Vancouver'
) %>%
group_by( GEO, year(REF_DATE), `Type of fuel` ) %>%
summarise( mean(VALUE) ) %>%
write_csv('yearly-average.csv')
read_csv('18100001.csv') %>%
mutate( REF_DATE = date(parse_date_time(REF_DATE,'ym')) ) %>%
filter(
year(REF_DATE) > 2010 &
`Type of fuel` %like% 'self' &
GEO %like% '^Toronto|^Edmonton|^Vancouver'
) %>%
group_by(
GEO,
year(REF_DATE),
`Type of fuel` %like% 'gasoline'
) %>%
summarise( mean(VALUE) ) %>%
write_csv('yearly-average.csv')
read_csv('18100001.csv') %>%
mutate(
year = year(date(parse_date_time(REF_DATE,'ym'))),
fuel = `Type of fuel` %like% 'gasoline' ? 'gasoline' : 'diesel'
)
read_csv('18100001.csv') %>%
mutate(
year = year(date(parse_date_time(REF_DATE,'ym'))),
fuel = if(`Type of fuel` %like% 'gasoline') 'gasoline' else 'diesel'
)
read_csv('18100001.csv') %>%
mutate(
year = year(date(parse_date_time(REF_DATE,'ym'))),
fuel = ifelse(`Type of fuel` %like% 'gasoline','gasoline','diesel')
)
read_csv('18100001.csv') %>%
mutate(
year = year(date(parse_date_time(REF_DATE,'ym'))),
fuel = ifelse(`Type of fuel` %like% 'gasoline','gasoline','diesel')
) %>%
filter(
year > 2010 &
`Type of fuel` %like% 'self' &
GEO %like% '^Toronto|^Edmonton|^Vancouver'
) %>%
group_by(
GEO,
year,
fuel
) %>%
summarise( mean(VALUE) ) %>%
write_csv('yearly-average.csv')
read_csv('18100001.csv') %>%
mutate(
year = year(date(parse_date_time(REF_DATE,'ym'))),
fuel = ifelse(`Type of fuel` %like% 'gasoline','gasoline','diesel')
) %>%
filter(
year > 2010 &
`Type of fuel` %like% 'self' &
GEO %like% '^Toronto|^Edmonton|^Vancouver'
) %>%
group_by( GEO, year, fuel	) %>%
summarise( avg = mean(VALUE) ) %>%
write_csv('yearly-average.csv')
read_csv('18100001.csv') %>%
mutate(
year = year(date(parse_date_time(REF_DATE,'ym'))),
fuel = ifelse(`Type of fuel` %like% 'gasoline','gasoline','diesel')
) %>%
filter(
year == 2020 &
`Type of fuel` %like% 'self' &
GEO %like% '^Toronto|^Edmonton|^Vancouver'
) %>%
group_by( GEO, year, fuel	) %>%
summarise( avg = mean(VALUE) ) %>%
write_csv('yearly-average.csv')
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' ) %>%
select( City, MPG_HDT, MPG_MDT ) %>%
mutate(
kmpl_HDT =  (MPG_HDT * 1.609344) / 4.54609,
kmpl_MDT =  (MPG_MDT * 1.609344) / 4.54609
)
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' ) %>%
mutate(
kmpl_HDT =  (MPG_HDT * 1.609344) / 4.54609,
kmpl_MDT =  (MPG_MDT * 1.609344) / 4.54609
) %>%
select( City, kmpl_HDT, kmpl_MDT )
read_csv('GEOTAB.csv') %>%
filter( City %like% '^Toronto|^Edmonton|^Vancouver' ) %>%
mutate(
kmpl_HDT =  (MPG_HDT * 1.609344) / 4.54609,
kmpl_MDT =  (MPG_MDT * 1.609344) / 4.54609
) %>%
select( City, kmpl_HDT, kmpl_MDT ) %>%
write_csv('kmpl.csv')
